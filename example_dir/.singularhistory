def m=read("ssi:r temp/schipp_137122_1722874432463313577");
;
quit;
quit;
;
ring R=0, x, dp;
smatrix s[2][4];
s[2,3]=x;
s;
link l="ssi:w Smatrix.ssi";
l;
write(l,s,"SparseMatrix");
close(l);
read(l);
quit;
;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
;
link l="ssi:r temp/waas_314170_1730377827391274083";
def m=read(l);
m.r_data;
def nr=m.r_data;
setring nr;
m.data[1];
m.data[2];
exit;
;
link l="ssi:r temp/waas_325720_1730383984749788644";
def m=read(l);
m.r_data;
def nr=m.r_data;
setring nr;
 m.data[1];
 m.data[2];
quit;
link l="ssi:r temp/waas_326923_1730384337207629839";
link l="ssi:r temp/waas_326923_1730384337207629839";
def m=read(l);
m.r_data;
def nr=m.r_data;
setring nr;
 m.data[1];
 m.data[2];
quit;
quit;
quit;
quit;
quit;
;
string s = "{{1, 3}, {1, 2}, {1, 2}, {2, 4}, {3, 4}, {3, 4}}";
s;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
;
s;
    string s = "{{1, 3}, {1, 2}, {1, 2}, {2, 4}, {3, 4}, {3, 4}}";
s;
list l=s;
l;
quit;
;
ideal J = w2 - x * z, w* x - y * z, x2 - w * y, x* y - z2, y2 - w * z;
string s = "{{1, 3}, {1, 2}, {1, 2}, {2, 4}, {3, 4}, {3, 4}}";
list l;
l[1] = J;
l[2] = s;
l;
ideal I=l[1];
I;
quit;
;
quit;
quit;
quit;
quit;
quit;
;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
;
cd ~/spack/opt/spack/linux-ubuntu22.04-skylake/gcc-11.3.0/gpi-space-23.06-gxye6b7ngsnbxnzjkfsfqtvanynyghdk/bin && ./gspc-logging-to-stdout.exe --port 9876 > ~/gpi/try_gpi/Reduce/monitor.txt 2>&1
link l="ssi:r tempbonsoir.ssi";
def m=read(l);
m;
link l="ssi:r tempbonsoir.ssi";
def m=read(l);
m;
quit;
;
> link l="ssi:r temp/waas_649526_1731144998227642808";
 link l="ssi:r temp/waas_649526_1731144998227642808";
 def m=read(l);
 m.r_data;
def nr=m.r_data;
 setring nr;
 m.data[1];
def nr=m.r_data;
 setring nr;
 m.data[2];
def nr=m.r_data;
 setring nr;
 m.data[3];
quit;
;
 link l="ssi:r temp/waas_650457_1731146497680889120";
 def m=read(l);
 m.r_data;
 def nr=m.r_data;
 setring nr;
 m.data[1];
 m.data[1];
 m.data[2];
 m.data[3];
quit;
quit;
quit;
;
 link l="ssi:r temp/waas_652034_1731146966565628822";
 def m=read(l);
 def nr=m.r_data;
 setring nr;
 m.data[2];
 m.data[3];
 m.data[3];
 m.data[2];
 m.data[1];
 m.data[0];
quit;
;
 link l="ssi:r temp/waas_63925_1731324564947008843";
 def m=read(l);
 def nr=m.r_data;
 setring nr;
 m.data[0];
 m.data[1];
 m.data[3];
quit;
quit;
quit;
quit;
quit;
 link l="ssi:r temp/input";
 link l="ssi:r temp/input";
 def m=read(l);
 def nr=m.r_data;
 setring nr;
 m.data[1];
 m.data[2];
 m.data[3];
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
;
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;!
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
link l="ssi:r temp/tempbonjour.ssi";
 def m=read(l);
link l="ssi:r tempbonjour.ssi";
 def m=read(l);
m;
m;
quit;
quit;
quit;
link l="ssi:r temphello.ssi";
 def m=read(l);
m;
m;
quit;
quit;
quit;
quit;
quit;
link l="ssi:r temphello.ssi";
 def m=read(l);
m;
link l="ssi:r temp/waas_1293822_1734696871369182968";
 def m=read(l);
m;
m.r_data;
 setring nr;
 def nr=m.r_data;
 setring nr;
 m.data[1];
 m.data[2];
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
link l="ssi:r temphello.ssi";
 def m=read(l);
m;
m;
quit;
link l="ssi:r temphello.ssi";
link l="ssi:r temphello.ssi";
 m.data[2];
 def m=read(l);
m;
quit;
quit;
link l="ssi:r temphello.ssi";
 def m=read(l);
m;
m[1][1].sectorMap;
m[1][1].sectorMap;
quit;
quit;
quit;
link l="ssi:r tempgetSector.ssi";
 def m=read(l);
m;
m;
quit;
quit;
quit;
quit;
link l="ssi:r tempfindSector.ssi";
 def m=read(l);
m;
m;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
link l="ssi:r hello.ssi";
 def m=read(l);
 def m1=read(l);
 def m2=read(l);
m;
m1;
m2;
m3;
 def m3=read(l);
m3;
quit;
quit;
link l="ssi:r hello.ssi";
 def m=read(l);
 def m1=read(l);
 def m2=read(l);
 def m3=read(l);
 def m4=read(l);
 def m5=read(l);
m;
m1;
m2;
m3;
m4;
m5;
quit;
link l="ssi:r hello.ssi";
 def m=read(l);
 def m1=read(l);
m;
m1;
quit;
link l="ssi:r hello.ssi";
 def m1=read(l);
m1;
m1;
quit;
link l="ssi:r hello.ssi";
 def m1=read(l);
m1;
quit;
link l="ssi:r hello.ssi";
 def m1=read(l);
 link l="ssi:r hello.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
m;
m1;
m;
quit;
 link l="ssi:r hello.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
m;
m;
m1;
m2;
m3;
 link l="ssi:r hello.ssi";
def m=read(l);
m;
def m1=read(l);
m1;
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
m;
m1;
m4;
m4;
quit;
 link l="ssi:r hello.ssi";
def m=read(l);
m;
def m1=read(l);
m1;
link l = "ssi:r hello.ssi";  // Open file for reading
list lines;                  // Initialize a list to store all lines
while (!eof(l)) {            // Continue reading until end of file
  lines[size(lines) + 1] = read(l);
}
// Close the link after reading
close(l);
// Access lines using their index
lines[1];  // First line
lines[2];  // Second line
lines[3];  // Third line
// and so on...
link l = "ssi:r hello.ssi";  // Open file for reading
list lines;                  // Initialize a list to store all lines
int success = 1;             // Variable to check if reading was successful
while (success) {
  try {
    lines[size(lines) + 1] = read(l);  // Attempt to read a line
  } catch {                           // Catch errors when no more lines exist
    success = 0;                      // Stop the loop
  }
}
// Close the link after reading
close(l);
// Access lines using their index
lines[1];  // First line
lines[2];  // Second line
lines[3];  // Third line
// and so on...
link l = "ssi:r hello.ssi";  // Open the file for reading
list lines;                  // Initialize a list to store the lines
string line;                 // Variable to temporarily store each line
while (1) {
  line = read(l);            // Try to read a line
  if (line == "") {          // Check if the line is empty (EOF reached)
    break;                   // Exit the loop
  }
  lines[size(lines) + 1] = line;  // Append the line to the list
}
// Close the link after reading
close(l);
// Access the lines
lines[1];  // First line
lines[2];  // Second line
lines[3];  // Third line
// ...and so on
link l = "ssi:r hello.ssi"; // Open the file for reading
list lines;                 // Initialize a list to store the lines
string line;                // Temporary variable to hold each line
int i = 1;                  // Counter for indexing the lines
// Read the file line by line until EOF
while (1) {
  if (defined(l)) {          // Check if the link is valid
    line = read(l);          // Read a line
    if (line == "") {        // If an empty string, EOF reached
      break;                 // Exit the loop
    }
    lines[i] = line;         // Store the line in the list
    i++;                     // Increment the counter
  } else {
    break;                   // Exit if the link becomes undefined
  }
}
// Close the link after reading
close(l);
// Access the lines
write("Total lines read: ", size(lines), "\n");
for (i = 1; i <= size(lines); i++) {
  write("Line ", i, ": ", lines[i], "\n");
}
link l = "ssi:r hello.ssi"; // Open the file for reading
list expressions;           // List to store the expressions
int i = 1;                  // Counter for indexing
// Read all expressions until EOF
while (status(l)) {         // Check if there's data to read
  expressions[i] = read(l); // Read one expression and store it
  i++;                      // Increment the counter
}
// Close the link after reading
close(l);
// Print all expressions
write("Total expressions read: ", size(expressions), "\n");
for (i = 1; i <= size(expressions); i++) {
  write("Expression ", i, ": ", expressions[i], "\n");
}
link l = "ssi:r hello.ssi"; // Open the file for reading
list expressions;           // List to store the expressions
int i = 1;                  // Counter for indexing
// Check the link's status and read all expressions
while (status(l) != 0) {    // Ensure there is data to read
  expressions[i] = read(l); // Read one expression and store it
  i++;                      // Increment the counter
}
// Close the link after reading
close(l);
// Print all expressions
write("Total expressions read: ", size(expressions), "\n");
for (i = 1; i <= size(expressions); i++) {
  write("Expression ", i, ": ", expressions[i], "\n");
}
link l = "ssi:r hello.ssi"; // Open the file for reading
list expressions;           // List to store the expressions
int i = 1;                  // Counter for indexing
// Check the link's status and read all expressions
while (status(l)) {         // Loop while there is data to read
  expressions[i] = read(l); // Read one expression and store it
  i++;                      // Increment the counter
}
// Close the link after reading
close(l);
// Print all expressions
write("Total expressions read: ", size(expressions), "\n");
for (i = 1; i <= size(expressions); i++) {
  write("Expression ", i, ": ", expressions[i], "\n");
}
quit;
 link l="ssi:r hello.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
m;
m1;
quit;
 link l="ssi:r hello.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
m;
m1;
m2;
m3;
m4;
m5;
link l = "ssi:r hello.ssi";  // Open the file for reading
list file_content;
while (!eof(l)) {
  file_content = file_content, read(l);  // Append each line to the list
}
close(l);  // Close the file
// Access the content by indices
file_content[1];  // Starting removeElimVars procedure.
file_content[2];  // Number of elimvars:
file_content[3];  // 6
file_content[4];  // Labels:
file_content[5];  // [1]: q(1)
file_content[6];  // [2]: q(2)
link l = "ssi:r hello.ssi";  // Open the file for reading
list file_content;           // List to store all lines
string line;                 // Temporary variable to store each line
while (1) {                  // Infinite loop to keep reading
  try {
    line = read(l);          // Attempt to read a line
    file_content = file_content, line;  // Append to the list
  } catch {                  // If an error occurs (e.g., end of file)
    break;                   // Exit the loop
  }
}
close(l);  // Close the file
// Access the content by indices
file_content[1];  // Starting removeElimVars procedure.
file_content[2];  // Number of elimvars:
file_content[3];  // 6
file_content[4];  // Labels:
file_content[5];  // [1]: q(1)
file_content[6];  // [2]: q(2)
quit;
 link l="ssi:r hello.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
def m7=read(l);
m7;
m6;
m5;
quit;
 link l="ssi:r hello.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l):
;
def m6=read(l);
m6;
quit;
 link l="ssi:r hello.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
m;
m2;
m4;
m5;
m6;
quit;
 link l="ssi:r hello.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
m5;
m4;
m6;
m4;
m5;
quit;
  write(l, "Updated Graph:\n", G1);
 link l="ssi:r hello.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
m4;
m5;
m6;
m3;
quit;
 link l="ssi:r hello.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
m5;
m4;
m6;
m5;
quit;
 link l="ssi:r hello.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
m5;
m6;
quit;
 link l="ssi:r hello.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
m5;
m6;
quit;
 link l="ssi:r hello.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
def m7=read(l);
m6;
m7;
quit;
 link l="ssi:r hello.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
def m7=read(l);
m5;
m6;
m7;
quit;
 link l="ssi:r hello.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
def m7=read(l);
m5;
m6;
m7;
quit;
 link l="ssi:r hello.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
def m7=read(l);
m5;
m6;
m7;
quit;
 link l="ssi:r hello.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
def m7=read(l);
m5;
m6;
m7;
quit;
 link l="ssi:r hello.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
def m7=read(l);
m5;
m6;
m4;
quit;
 link l="ssi:r hello.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
def m7=read(l);
def m8=read(l);
m5;
m6;
m7;
m8;
quit;
 link l="ssi:r hello.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
def m7=read(l);
def m8=read(l);
m5;
m6;
m7;
m8;
quit;
 link l="ssi:r hello.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
def m7=read(l);
def m8=read(l);
m5;
m3;
m4;
m6;
C95;
m5;
quit;
 link l="ssi:r hello.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
def m7=read(l);
def m8=read(l);
m4;
m5;
m6;
m7;
m8;
quit;
 link l="ssi:r hello.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
def m7=read(l);
def m8=read(l);
m5;
m6;
m7;
quit;
 link l="ssi:r hello.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
def m7=read(l);
def m8=read(l);
m5;
m6;
m7;
m8;
quit;
 link l="ssi:r hello.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
def m7=read(l);
def m8=read(l);
m5;
m6;
m7;
quit;
 link l="ssi:r hello.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
def m7=read(l);
def m8=read(l);
m6;
m7;
m8;
quit;
 link l="ssi:r hello.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
def m7=read(l);
def m8=read(l);
m5;
m4;
m5;
m6;
m7;
quit;
 link l="ssi:r hello.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
def m7=read(l);
def m8=read(l);
m5;
m6;
m7;
m8;
quit;
 link l="ssi:r hello.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
def m7=read(l);
def m8=read(l);
m6;
m7;
m8;
quit;
 link l="ssi:r hello.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
def m7=read(l);
def m8=read(l);
m5;
m4;
m5;
m6;
m7;
m8;
quit;
 link l="ssi:r hello.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
def m7=read(l);
def m8=read(l);
m5;
m4;
m6;
m7;
m8;
quit;
 link l="ssi:r hello.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
def m7=read(l);
def m8=read(l);
m5;
m6;
m7;
m8;
quit;
 link l="ssi:r hello.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
def m7=read(l);
def m8=read(l);
m5;
m6;
m7;
quit;
 link l="ssi:r hello.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
def m7=read(l);
def m8=read(l);
m;
quit;
quit;
quit;
quit;
link l="ssi:r hello.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
def m7=read(l);
def m8=read(l);
m;
m1;
m2;
quit;
link l="ssi:r hello.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
def m7=read(l);
def m8=read(l);
m1;
m2;
m3;
m4;
quit;
quit;
quit;
quit;
link l="ssi:r hello.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
def m7=read(l);
def m8=read(l);
m1;
m2;
m;
quit;
link l="ssi:r hello.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
def m7=read(l);
def m8=read(l);
m1;
m2;
m3;
m4;
quit;
link l="ssi:r hello.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
def m7=read(l);
def m8=read(l);
m5;
m4;
quit;
quit;
link l="ssi:r hello.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
def m7=read(l);
def m8=read(l);
m;
m4;
m5;
m6;
m7;
m8;
m8;
quit;
link l="ssi:r hello.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
def m7=read(l);
def m8=read(l);
m5;
m4;
m6;
quit;
quit;
quit;
quit;
quit;
link l="ssi:r temp/waas_1293822_1734696871369182968";
quit;
link l="ssi:r temp/waas_1990514_1735033174858440727";
 def m=read(l);
 m.r_data;
 def nr=m.r_data;
 setring nr;
 m.data[1];
 m.data[2];
 m.data[3];
 m.data[4];
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
link l="ssi:r temp/waas_1990514_1735033174858440727";
link l="ssi:r temp/waas_2006852_1735038019081428306";
 def m=read(l);
 m.r_data;
 def nr=m.r_data;
 setring nr;
 m.data[1];
m.data[2];
quit;
quit;
quit;
quit;
link l="ssi:r temp/waas_2006852_1735038019081428306";
link l="ssi:r temp/waas_2011967_1735039220841016463";
 def m=read(l);
 m.r_data;
 def nr=m.r_data;
 setring nr;
 m.data[1];
quit;
quit;
link l="ssi:r temp/waas_2011967_1735039220841016463";
link l="ssi:r temp/waas_2013242_1735039403265454080";
 def m=read(l);
 m.r_data;
 def nr=m.r_data;
 setring nr;
 m.data[1];
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
link l="ssi:r temp/waas_3900306_1736242366253193410";
 def m=read(l);
 def nr=m.r_data;
 setring nr;
 m.data[1];
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
link l="ssi:r hello.ssi";
def m=read(l);
m;
def m=read(l);
def m=read(l);
m;
m;
link l="ssi:r hello.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
m;
m1;
m2;
link l="ssi:r hello.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
def m7=read(l);
m;
m1;
m2;
m3;
m4;
quit;
link l="ssi:r hello.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
def m7=read(l);
m;
m1;
quit;
link l="ssi:r hello.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
def m7=read(l);
m;
m1;
m2;
m3;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
link l="ssi:r hello.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
def m7=read(l);
def m8=read(l);
m;
m1;
 link l="ssi:r temp/waas_3976595_1736264525547869963";
 def m=read(l);
 m.r_data;
 def nr=m.r_data;
 setring nr;
 m.data[1];
graph G = makeGraph(list(1,2,3,4,5,6),list(list(6,1),list(4,6),list(1,2),list(3,5),list(4,3),list(2,5),list(5,6),list(1),list(2),list(3),list(4)));
  labeledgraph G1 = computeBaikovMatrix(G);
exit;
exit;
exit;
exit;
exit;
link l="ssi:r hi.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
def m7=read(l);
def m8=read(l);
m;
m1;
m2;
m3;
m4;
m5;
m6;
m7;
m8;
exit;
link l="ssi:r hi.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
def m7=read(l);
def m8=read(l);
m;
m1;
m2;
exit;
link l="ssi:r hi.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
def m7=read(l);
def m8=read(l);
m;
m1;
quit;
link l="ssi:r hi.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
def m7=read(l);
def m8=read(l);
m;
m1;
quit;
link l="ssi:r hi.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
def m7=read(l);
def m8=read(l);
m;
m1;
def s=m1.baikovover;
setring s;
m1.baikovmatrix;
s;
def s=m1.baikovmatrix_r;
def s=m1.baikovmatrix_r.data;
def s=m1.baikovmatrix.r_data;
m1;
quit;
quit;
link l="ssi:r hi.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
def m7=read(l);
def m8=read(l);
m1;
m1.baikovmatrix;
m1.baikovmatrix_r;
m1.r_baikovmatrix;
def s=m1.r_baikovmatrix;
setring s;
m1.baikovmatrix;
m1;
link l="ssi:r hi.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
def m7=read(l);
def m8=read(l);
m;
m1;
quit;
computeManyIBPcomputeManyIBP
quit;
link l="ssi:r hello.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
def m7=read(l);
def m8=read(l);
quit;
link l="ssi:r hello.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
def m7=read(l);
def m8=read(l);
quit;
quit;
quit;
quit;
quit;
link l="ssi:r hello.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
def m7=read(l);
def m8=read(l);
m;
 def RB = m.r_baikovmatrix;
  setring RB;
m.baikovmatrix;
quit;
link l="ssi:r hello.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
def m7=read(l);
def m8=read(l);
m;
m1;
quit;
quit;
link l="ssi:r hi.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
def m7=read(l);
def m8=read(l);
m;
m1;
m2;
quit;
link l="ssi:r hello.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
def m7=read(l);
def m8=read(l);
m1;
m;
m2;
m3;
quit;
link l="ssi:r hello.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
def m7=read(l);
def m8=read(l);
m1;
m2;
m3;
quit;
link l="ssi:r hello.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
def m7=read(l);
def m8=read(l);
m1;
m2;
m;
quit;
link l="ssi:r hello.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
def m7=read(l);
def m8=read(l);
m1;
m;
quit;
link l="ssi:r hello.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
def m7=read(l);
def m8=read(l);
m;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
quit;
link l="ssi:r hello.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
def m7=read(l);
def m8=read(l);
m2;
m3;
quit;
quit;
quit;
quit;
link l="ssi:r hello.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
def m7=read(l);
def m8=read(l);
m;
quit;
quit;
quit;
quit;
link l="ssi:r hi.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
def m7=read(l);
def m8=read(l);
m;
m1;
m2;
list l;
list mm;
int mm;
setIBP S;
quit;
quit;
link l="ssi:r temp/waas_258021_1736525268693007812";
def m=read(l);
 m.r_data;
 def nr=m.r_data;
 setring nr;
 m.data[1];
m.data[2];
quit;
quit;
quit;
link l="ssi:r temp/waas_258021_1736525268693007812";
link l="ssi:r temp/waas_260312_1736525758067053576";
 def m=read(l);
 m.r_data;
 def nr=m.r_data;
 setring nr;
 m.data[1];
quit;
link l="ssi:r temp/waas_260312_1736525758067053576";
link l="ssi:r temp/waas_261916_1736526165575976285";
 def m=read(l);
 m.r_data;
 def nr=m.r_data;
 setring nr;
 m.data[1];
quit;
link l="ssi:r temp/waas_261916_1736526165575976285";
link l="ssi:r temp/waas_262891_1736526444519998327";
 def m=read(l);
 m.r_data;
 def nr=m.r_data;
 setring nr;
 m.data[1];
quit;
link l="ssi:r temp/waas_262891_1736526444519998327";
link l="ssi:r temp/waas_263684_1736526648403355439";
 def m=read(l);
 m.r_data;
 def nr=m.r_data;
 setring nr;
 m.data[1];
quit;
link l="ssi:r temp/waas_263684_1736526648403355439";
link l="ssi:r temp/waas_265765_1736527452857520011";
 def m=read(l);
 m.r_data;
 def nr=m.r_data;
 setring nr;
 m.data[1];
quit;
quit;
quit;
link l="ssi:r hi.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
def m7=read(l);
def m8=read(l);
m;
m1;
quit;
link l="ssi:r hi.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
def m7=read(l);
def m8=read(l);
m;
quit;
quit;
link l="ssi:r hi.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
def m7=read(l);
def m8=read(l);
m;
m1;
m2;
quit;
link l="ssi:r hi.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
def m7=read(l);
def m8=read(l);
m;
quit;
link l="ssi:r hi.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
def m7=read(l);
def m8=read(l);
m;
m.seed;
m.IBP;
 link l="ssi:r temp/waas_314170_1730377827391274083";
 link l="ssi:r temp/waas_271877_1736528865321165872";
 def m=read(l);
 m.r_data;
 def nr=m.r_data;
 setring nr;
 m.data[1];
 link l="ssi:r temp/waas_271877_1736528865320373404";
 def m=read(l);
 m.r_data;
 def nr=m.r_data;
 setring nr;
 m.data[1];
m.seed;
m.data[1].seed;
m.data[1].over;
link l="ssi:r hi.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
def m7=read(l);
def m8=read(l);
m;
m.over;
 def m=read(l);
 m.r_data;
 def nr=m.r_data;
 setring nr;
 m.data[1];
;
link l="ssi:r temp/waas_263684_1736526648403355439";
link l="ssi:r temp/waas_271877_1736528865320708900";
 def m=read(l);
 m.r_data;
 def nr=m.r_data;
 setring nr;
 m.data[1];
m.data[1];
m.data[1].seed;
link l="ssi:r temp/waas_271877_1736528865320872061";
 def m=read(l);
 m.r_data;
 def nr=m.r_data;
 setring nr;
 m.data[1];
link l="ssi:r temp/waas_271877_1736528865321165872";
 def m=read(l);
 m.r_data;
 def nr=m.r_data;
 setring nr;
 m.data[1];
link l="ssi:r hi.ssi";
def m=read(l);
def m1=read(l);
def m2=read(l);
def m3=read(l);
def m4=read(l);
def m5=read(l);
def m6=read(l);
def m7=read(l);
def m8=read(l);
m;
quit;
quit;
